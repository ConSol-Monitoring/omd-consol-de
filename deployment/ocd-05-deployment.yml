---
apiVersion: v1
kind: ConfigMap
metadata:
  name: git-config
  namespace: ocd
data:
  dotgitconfig: |
    [safe]
            directory = *

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: goaccess-config
  namespace: ocd
data:
  excludes: |
    GET /favicons
    GET /js/
    GET /assets/
    GET /scss/
    GET /webfonts/

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omd-consol-de
  namespace: ocd
  labels:
    app: omd-consol-de
spec:
  replicas: 1
  selector:
    matchLabels:
      app: omd-consol-de
  template:
    metadata:
      labels:
        app: omd-consol-de
    spec:
      initContainers:
      - name: git-sync-init
        image: k8s.gcr.io/git-sync/git-sync:v3.2.2
        args:
        - "-repo=$(GIT_REPO_URL)"
        - "-branch=$(GIT_BRANCH)"
        - "-one-time"
        - "-root=/tmp/git"
        - "-dest=ocd"
        # clones into /tmp/git/rev-something
        # ln -s /tmp/git/rev-something /tmp/git/ocd
        envFrom:
          - configMapRef:
              name: git-repo
        volumeMounts:
        - name: content
          mountPath: /tmp/git
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx
        - name: nginx-logs
          mountPath: /var/log/nginx
        # switches to user nginx anyway.
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          allowPrivilegeEscalation: false
      - name: hugo
        image: ghcr.io/consol/omd-consol-de/ocd:latest
        args:
        - "--watch"
        - "--source"
        - "/tmp/git/ocd/"
        - "--destination"
        # /tmp/public/html because /tmp/public can be written, but after
        # writing files, hugo runs chtimes on all files including "."
        # and for "." it has no permissions.
        - "/tmp/public/html"
        volumeMounts:
        - name: html
          mountPath: /tmp/public
        - name: content
          mountPath: /tmp/git
        - name: git-config
          mountPath: /tmp/.gitconfig
          subPath: dotgitconfig
      - name: git-sync
        image: k8s.gcr.io/git-sync/git-sync:v3.2.2
        args:
        - "-repo=$(GIT_REPO_URL)"
        - "-branch=$(GIT_BRANCH)"
        - "-wait=20"
        - "-root=/tmp/git"
        - "-dest=ocd"
        envFrom:
          - configMapRef:
              name: git-repo
        volumeMounts:
        - name: content
          mountPath: /tmp/git
      - name: logger
        image: busybox
        args: [/bin/sh, -c, 'tail -n+1 -F /var/log/nginx/access.log']
        volumeMounts:
        - name: nginx-logs
          mountPath: /var/log/nginx
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          allowPrivilegeEscalation: false
      - name: goaccess
        command: ["/bin/sh"]
        args: ["-c", "while true; do cat /var/log/nginx/access.log | grep -v -f /tmp/excludes.txt | /bin/goaccess -o /var/log/nginx/index.html --log-format=COMBINED --persist --restore --db-path /var/tmp/goaccess-db -; sleep 60; done"]
#        command:
#        - goaccess
#        - /var/log/nginx/access.log
#        - -o
#        - /var/log/nginx/index.html
#        - --log-format=COMBINED
#        - --real-time-html
        image: allinurl/goaccess
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 200m
            memory: 32Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/log/nginx
          name: nginx-logs
        - mountPath: /var/tmp/goaccess-db
          name: goaccess-db
        - name: goaccess-config
          mountPath: /tmp/excludes.txt
          subPath: excludes
      - name: goaccess-web
        command:
        - python
        - -m
        - http.server
        image: python
        imagePullPolicy: Always
        name: goaccess-web
        ports:
        - containerPort: 8000
          name: goaccess
          protocol: TCP
        resources:
          requests:
            cpu: 200m
            memory: 32Mi
        volumeMounts:
        - mountPath: /var/log/nginx
          name: nginx-logs
        workingDir: /var/log/nginx

      volumes:
      - name: html
        emptyDir: {}
      - name: content
        emptyDir: {}
      - name: git-config
        configMap:
          name: git-config
          defaultMode: 0644
      - name: goaccess-config
        configMap:
          name: goaccess-config
          defaultMode: 0644
      - name: nginx-logs
        persistentVolumeClaim:
          claimName: nginx-logs-pvc
      - name: goaccess-db
        persistentVolumeClaim:
          claimName: goaccess-db-pvc

      restartPolicy: Always
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
